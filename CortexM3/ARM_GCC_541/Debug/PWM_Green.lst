ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Green.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Green_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Green_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_Green_Enable, %function
  25              	PWM_Green_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_Green.c"
   1:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_Green.c **** * File Name: PWM_Green.c
   3:Generated_Source\PSoC5/PWM_Green.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_Green.c **** *
   5:Generated_Source\PSoC5/PWM_Green.c **** * Description:
   6:Generated_Source\PSoC5/PWM_Green.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_Green.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_Green.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_Green.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_Green.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_Green.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_Green.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_Green.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_Green.c **** *
  15:Generated_Source\PSoC5/PWM_Green.c **** * Note:
  16:Generated_Source\PSoC5/PWM_Green.c **** *
  17:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_Green.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_Green.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_Green.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_Green.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_Green.c **** 
  24:Generated_Source\PSoC5/PWM_Green.c **** #include "PWM_Green.h"
  25:Generated_Source\PSoC5/PWM_Green.c **** 
  26:Generated_Source\PSoC5/PWM_Green.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_Green.c **** #ifdef PWM_Green_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_Green.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_Green.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_Green.c **** #endif /* PWM_Green_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 2


  31:Generated_Source\PSoC5/PWM_Green.c **** 
  32:Generated_Source\PSoC5/PWM_Green.c **** uint8 PWM_Green_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_Green.c **** 
  34:Generated_Source\PSoC5/PWM_Green.c **** 
  35:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_Green.c **** * Function Name: PWM_Green_Start
  37:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_Green.c **** *
  39:Generated_Source\PSoC5/PWM_Green.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_Green.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_Green.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_Green.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_Green.c **** *
  44:Generated_Source\PSoC5/PWM_Green.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_Green.c **** *  None
  46:Generated_Source\PSoC5/PWM_Green.c **** *
  47:Generated_Source\PSoC5/PWM_Green.c **** * Return:
  48:Generated_Source\PSoC5/PWM_Green.c **** *  None
  49:Generated_Source\PSoC5/PWM_Green.c **** *
  50:Generated_Source\PSoC5/PWM_Green.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_Green.c **** *  PWM_Green_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_Green.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_Green.c **** *
  54:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_Green.c **** void PWM_Green_Start(void) 
  56:Generated_Source\PSoC5/PWM_Green.c **** {
  57:Generated_Source\PSoC5/PWM_Green.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_Green.c ****     if(PWM_Green_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_Green.c ****     {
  60:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_Init();
  61:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_Green.c ****     }
  63:Generated_Source\PSoC5/PWM_Green.c ****     PWM_Green_Enable();
  64:Generated_Source\PSoC5/PWM_Green.c **** 
  65:Generated_Source\PSoC5/PWM_Green.c **** }
  66:Generated_Source\PSoC5/PWM_Green.c **** 
  67:Generated_Source\PSoC5/PWM_Green.c **** 
  68:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_Green.c **** * Function Name: PWM_Green_Init
  70:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_Green.c **** *
  72:Generated_Source\PSoC5/PWM_Green.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_Green.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_Green.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_Green.c **** *  PWM_Green_Start().
  76:Generated_Source\PSoC5/PWM_Green.c **** *
  77:Generated_Source\PSoC5/PWM_Green.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_Green.c **** *  None
  79:Generated_Source\PSoC5/PWM_Green.c **** *
  80:Generated_Source\PSoC5/PWM_Green.c **** * Return:
  81:Generated_Source\PSoC5/PWM_Green.c **** *  None
  82:Generated_Source\PSoC5/PWM_Green.c **** *
  83:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_Green.c **** void PWM_Green_Init(void) 
  85:Generated_Source\PSoC5/PWM_Green.c **** {
  86:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UsingFixedFunction || PWM_Green_UseControl)
  87:Generated_Source\PSoC5/PWM_Green.c ****         uint8 ctrl;
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 3


  88:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction || PWM_Green_UseControl) */
  89:Generated_Source\PSoC5/PWM_Green.c **** 
  90:Generated_Source\PSoC5/PWM_Green.c ****     #if(!PWM_Green_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_Green.c ****         #if(PWM_Green_UseStatus)
  92:Generated_Source\PSoC5/PWM_Green.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_Green.c ****             uint8 PWM_Green_interruptState;
  94:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UseStatus) */
  95:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (!PWM_Green_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_Green.c **** 
  97:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_Green.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_CONTROL |= PWM_Green_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_CONTROL |= PWM_Green_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_Green.c **** 
 104:Generated_Source\PSoC5/PWM_Green.c ****         ctrl = PWM_Green_CONTROL3 & ((uint8 )(~PWM_Green_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_CONTROL3 = ctrl | PWM_Green_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_Green.c **** 
 107:Generated_Source\PSoC5/PWM_Green.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_RT1 &= ((uint8)(~PWM_Green_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_RT1 |= PWM_Green_SYNC;
 110:Generated_Source\PSoC5/PWM_Green.c **** 
 111:Generated_Source\PSoC5/PWM_Green.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_RT1 &= ((uint8)(~PWM_Green_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_RT1 |= PWM_Green_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_Green.c **** 
 115:Generated_Source\PSoC5/PWM_Green.c ****     #elif (PWM_Green_UseControl)
 116:Generated_Source\PSoC5/PWM_Green.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_Green.c ****         ctrl = PWM_Green_CONTROL & ((uint8)(~PWM_Green_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_Green.c ****                 ((uint8)(~PWM_Green_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_CONTROL = ctrl | PWM_Green_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_Green.c ****                                    PWM_Green_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_Green.c **** 
 123:Generated_Source\PSoC5/PWM_Green.c ****     #if (!PWM_Green_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_Green.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_AUX_CONTROLDP0 |= (PWM_Green_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_Green.c ****         #else /* (PWM_Green_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_Green.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_AUX_CONTROLDP0 |= (PWM_Green_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_AUX_CONTROLDP1 |= (PWM_Green_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_Green.c **** 
 133:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_WriteCounter(PWM_Green_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (!PWM_Green_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_Green.c **** 
 136:Generated_Source\PSoC5/PWM_Green.c ****     PWM_Green_WritePeriod(PWM_Green_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_Green.c **** 
 138:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_WriteCompare(PWM_Green_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_Green.c ****         #else
 141:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_WriteCompare1(PWM_Green_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_WriteCompare2(PWM_Green_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_Green.c **** 
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 4


 145:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_WriteKillTime(PWM_Green_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_Green.c **** 
 149:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_WriteDeadTime(PWM_Green_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_Green.c **** 
 153:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UseStatus || PWM_Green_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_SetInterruptMode(PWM_Green_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UseStatus || PWM_Green_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_Green.c **** 
 157:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_Green.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_GLOBAL_ENABLE |= PWM_Green_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_Green.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_CONTROL2 |= PWM_Green_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_Green.c ****     #else
 163:Generated_Source\PSoC5/PWM_Green.c ****         #if(PWM_Green_UseStatus)
 164:Generated_Source\PSoC5/PWM_Green.c **** 
 165:Generated_Source\PSoC5/PWM_Green.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_Green.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_Green.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_STATUS_AUX_CTRL |= PWM_Green_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_Green.c **** 
 171:Generated_Source\PSoC5/PWM_Green.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_Green.c ****             CyExitCriticalSection(PWM_Green_interruptState);
 173:Generated_Source\PSoC5/PWM_Green.c **** 
 174:Generated_Source\PSoC5/PWM_Green.c ****             /* Clear the FIFO to enable the PWM_Green_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_Green.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UseStatus) */
 178:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_Green.c **** }
 180:Generated_Source\PSoC5/PWM_Green.c **** 
 181:Generated_Source\PSoC5/PWM_Green.c **** 
 182:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_Green.c **** * Function Name: PWM_Green_Enable
 184:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_Green.c **** *
 186:Generated_Source\PSoC5/PWM_Green.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_Green.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_Green.c **** *
 189:Generated_Source\PSoC5/PWM_Green.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_Green.c **** *  None
 191:Generated_Source\PSoC5/PWM_Green.c **** *
 192:Generated_Source\PSoC5/PWM_Green.c **** * Return:
 193:Generated_Source\PSoC5/PWM_Green.c **** *  None
 194:Generated_Source\PSoC5/PWM_Green.c **** *
 195:Generated_Source\PSoC5/PWM_Green.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_Green.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_Green.c **** *
 198:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_Green.c **** void PWM_Green_Enable(void) 
 200:Generated_Source\PSoC5/PWM_Green.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_Green.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_GLOBAL_ENABLE |= PWM_Green_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_GLOBAL_STBY_ENABLE |= PWM_Green_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_Green.c **** 
 207:Generated_Source\PSoC5/PWM_Green.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UseControl || PWM_Green_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_CONTROL |= PWM_Green_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 76650040 		.word	1073767798
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_Green_Enable, .-PWM_Green_Enable
  46              		.section	.text.PWM_Green_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_Green_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_Green_Stop, %function
  52              	PWM_Green_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UseControl || PWM_Green_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_Green.c **** }
 212:Generated_Source\PSoC5/PWM_Green.c **** 
 213:Generated_Source\PSoC5/PWM_Green.c **** 
 214:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_Green.c **** * Function Name: PWM_Green_Stop
 216:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_Green.c **** *
 218:Generated_Source\PSoC5/PWM_Green.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_Green.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_Green.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_Green.c **** *
 222:Generated_Source\PSoC5/PWM_Green.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_Green.c **** *  None
 224:Generated_Source\PSoC5/PWM_Green.c **** *
 225:Generated_Source\PSoC5/PWM_Green.c **** * Return:
 226:Generated_Source\PSoC5/PWM_Green.c **** *  None
 227:Generated_Source\PSoC5/PWM_Green.c **** *
 228:Generated_Source\PSoC5/PWM_Green.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_Green.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_Green.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_Green.c **** *
 232:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************/
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 6


 233:Generated_Source\PSoC5/PWM_Green.c **** void PWM_Green_Stop(void) 
 234:Generated_Source\PSoC5/PWM_Green.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UseControl || PWM_Green_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_CONTROL &= ((uint8)(~PWM_Green_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 76650040 		.word	1073767798
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_Green_Stop, .-PWM_Green_Stop
  72              		.section	.text.PWM_Green_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_Green_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_Green_WriteCounter, %function
  78              	PWM_Green_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UseControl || PWM_Green_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_Green.c **** 
 239:Generated_Source\PSoC5/PWM_Green.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_GLOBAL_ENABLE &= ((uint8)(~PWM_Green_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Green_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_Green.c **** }
 245:Generated_Source\PSoC5/PWM_Green.c **** 
 246:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_Green.c **** 
 249:Generated_Source\PSoC5/PWM_Green.c **** 
 250:Generated_Source\PSoC5/PWM_Green.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_Green.c ****         * Function Name: PWM_Green_SetCompareMode
 252:Generated_Source\PSoC5/PWM_Green.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_Green.c ****         *
 254:Generated_Source\PSoC5/PWM_Green.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_Green.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_Green.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_Green.c ****         *
 258:Generated_Source\PSoC5/PWM_Green.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_Green.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_Green.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_Green.c ****         *
 262:Generated_Source\PSoC5/PWM_Green.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_Green.c ****         *  None
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 7


 264:Generated_Source\PSoC5/PWM_Green.c ****         *
 265:Generated_Source\PSoC5/PWM_Green.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_Green.c ****         void PWM_Green_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_Green.c ****         {
 268:Generated_Source\PSoC5/PWM_Green.c ****             #if(PWM_Green_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_Green.c **** 
 270:Generated_Source\PSoC5/PWM_Green.c ****                 #if(0 != PWM_Green_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_Green.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Green_CTRL_CMPMODE
 272:Generated_Source\PSoC5/PWM_Green.c ****                 #else
 273:Generated_Source\PSoC5/PWM_Green.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_Green.c ****                 #endif /* (0 != PWM_Green_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_Green.c **** 
 276:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_CONTROL3 &= ((uint8)(~PWM_Green_CTRL_CMPMODE1_MASK)); /*Clear Existing Da
 277:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_Green.c **** 
 279:Generated_Source\PSoC5/PWM_Green.c ****             #elif (PWM_Green_UseControl)
 280:Generated_Source\PSoC5/PWM_Green.c **** 
 281:Generated_Source\PSoC5/PWM_Green.c ****                 #if(0 != PWM_Green_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_Green.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Green_CTRL_CMPMOD
 283:Generated_Source\PSoC5/PWM_Green.c ****                                                 PWM_Green_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_Green.c ****                 #else
 285:Generated_Source\PSoC5/PWM_Green.c ****                     uint8 comparemode1masked = comparemode & PWM_Green_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_Green.c ****                 #endif /* (0 != PWM_Green_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_Green.c **** 
 288:Generated_Source\PSoC5/PWM_Green.c ****                 #if(0 != PWM_Green_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_Green.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Green_CTRL_CMPMOD
 290:Generated_Source\PSoC5/PWM_Green.c ****                                                PWM_Green_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_Green.c ****                 #else
 292:Generated_Source\PSoC5/PWM_Green.c ****                     uint8 comparemode2masked = comparemode & PWM_Green_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_Green.c ****                 #endif /* (0 != PWM_Green_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_Green.c **** 
 295:Generated_Source\PSoC5/PWM_Green.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_CONTROL &= ((uint8)(~(PWM_Green_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_Green.c ****                                             PWM_Green_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_Green.c **** 
 300:Generated_Source\PSoC5/PWM_Green.c ****             #else
 301:Generated_Source\PSoC5/PWM_Green.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_Green.c ****             #endif /* (PWM_Green_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_Green.c ****         }
 304:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* PWM_Green_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_Green.c **** 
 306:Generated_Source\PSoC5/PWM_Green.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_Green.c **** 
 308:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_Green.c **** 
 310:Generated_Source\PSoC5/PWM_Green.c **** 
 311:Generated_Source\PSoC5/PWM_Green.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_Green.c ****         * Function Name: PWM_Green_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_Green.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_Green.c ****         *
 315:Generated_Source\PSoC5/PWM_Green.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_Green.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_Green.c ****         *
 318:Generated_Source\PSoC5/PWM_Green.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_Green.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_Green.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 8


 321:Generated_Source\PSoC5/PWM_Green.c ****         *
 322:Generated_Source\PSoC5/PWM_Green.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_Green.c ****         *  None
 324:Generated_Source\PSoC5/PWM_Green.c ****         *
 325:Generated_Source\PSoC5/PWM_Green.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_Green.c ****         void PWM_Green_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_Green.c ****         {
 328:Generated_Source\PSoC5/PWM_Green.c ****             #if(0 != PWM_Green_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_Green.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Green_CTRL_CMPMODE1_SH
 330:Generated_Source\PSoC5/PWM_Green.c ****                                            PWM_Green_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_Green.c ****             #else
 332:Generated_Source\PSoC5/PWM_Green.c ****                 uint8 comparemodemasked = comparemode & PWM_Green_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_Green.c ****             #endif /* (0 != PWM_Green_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_Green.c **** 
 335:Generated_Source\PSoC5/PWM_Green.c ****             #if (PWM_Green_UseControl)
 336:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_CONTROL &= ((uint8)(~PWM_Green_CTRL_CMPMODE1_MASK)); /*Clear existing mod
 337:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_Green.c ****             #endif /* (PWM_Green_UseControl) */
 339:Generated_Source\PSoC5/PWM_Green.c ****         }
 340:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* PWM_Green_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_Green.c **** 
 342:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_Green.c **** 
 344:Generated_Source\PSoC5/PWM_Green.c **** 
 345:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_Green.c ****     *
 349:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_Green.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_Green.c ****     *
 352:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_Green.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_Green.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_Green.c ****     *
 356:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 358:Generated_Source\PSoC5/PWM_Green.c ****     *
 359:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_Green.c ****     {
 362:Generated_Source\PSoC5/PWM_Green.c **** 
 363:Generated_Source\PSoC5/PWM_Green.c ****         #if(0 != PWM_Green_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_Green.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Green_CTRL_CMPMODE2_SHIFT)
 365:Generated_Source\PSoC5/PWM_Green.c ****                                                  PWM_Green_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_Green.c ****         #else
 367:Generated_Source\PSoC5/PWM_Green.c ****             uint8 comparemodemasked = comparemode & PWM_Green_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (0 != PWM_Green_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_Green.c **** 
 370:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_UseControl)
 371:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_CONTROL &= ((uint8)(~PWM_Green_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UseControl) */
 374:Generated_Source\PSoC5/PWM_Green.c ****     }
 375:Generated_Source\PSoC5/PWM_Green.c ****     #endif /*PWM_Green_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_Green.c **** 
 377:Generated_Source\PSoC5/PWM_Green.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 9


 378:Generated_Source\PSoC5/PWM_Green.c **** 
 379:Generated_Source\PSoC5/PWM_Green.c **** 
 380:Generated_Source\PSoC5/PWM_Green.c **** #if (!PWM_Green_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_Green.c **** 
 382:Generated_Source\PSoC5/PWM_Green.c **** 
 383:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_WriteCounter
 385:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_Green.c ****     *
 387:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_Green.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_Green.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_Green.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_Green.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_Green.c ****     *
 393:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_Green.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_Green.c ****     *
 396:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 398:Generated_Source\PSoC5/PWM_Green.c ****     *
 399:Generated_Source\PSoC5/PWM_Green.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_Green.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_Green.c ****     *
 402:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_Green.c ****                                        
 405:Generated_Source\PSoC5/PWM_Green.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_Green.c ****         CY_SET_REG8(PWM_Green_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 05650040 		.word	1073767685
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_Green_WriteCounter, .-PWM_Green_WriteCounter
  97              		.section	.text.PWM_Green_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_Green_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_Green_ReadCounter, %function
 103              	PWM_Green_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_Green.c ****     }
 408:Generated_Source\PSoC5/PWM_Green.c **** 
 409:Generated_Source\PSoC5/PWM_Green.c **** 
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 10


 410:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadCounter
 412:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_Green.c ****     *
 414:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_Green.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_Green.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_Green.c ****     *
 418:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 420:Generated_Source\PSoC5/PWM_Green.c ****     *
 421:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_Green.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_Green.c ****     *
 424:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_Green.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_Green.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_Green.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_Green.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_Green.c ****           (void)CY_GET_REG8(PWM_Green_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_Green.c **** 
 432:Generated_Source\PSoC5/PWM_Green.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_Green.c ****         return (CY_GET_REG8(PWM_Green_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_Green.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 15650040 		.word	1073767701
 122 0010 55650040 		.word	1073767765
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_Green_ReadCounter, .-PWM_Green_ReadCounter
 126              		.section	.text.PWM_Green_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_Green_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_Green_WritePeriod, %function
 132              	PWM_Green_WritePeriod:
 133              	.LFB6:
 435:Generated_Source\PSoC5/PWM_Green.c **** 
 436:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UseStatus)
 437:Generated_Source\PSoC5/PWM_Green.c **** 
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 11


 438:Generated_Source\PSoC5/PWM_Green.c **** 
 439:Generated_Source\PSoC5/PWM_Green.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_Green.c ****         * Function Name: PWM_Green_ClearFIFO
 441:Generated_Source\PSoC5/PWM_Green.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_Green.c ****         *
 443:Generated_Source\PSoC5/PWM_Green.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_Green.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_Green.c ****         *
 446:Generated_Source\PSoC5/PWM_Green.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_Green.c ****         *  None
 448:Generated_Source\PSoC5/PWM_Green.c ****         *
 449:Generated_Source\PSoC5/PWM_Green.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_Green.c ****         *  None
 451:Generated_Source\PSoC5/PWM_Green.c ****         *
 452:Generated_Source\PSoC5/PWM_Green.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_Green.c ****         void PWM_Green_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_Green.c ****         {
 455:Generated_Source\PSoC5/PWM_Green.c ****             while(0u != (PWM_Green_ReadStatusRegister() & PWM_Green_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_Green.c ****             {
 457:Generated_Source\PSoC5/PWM_Green.c ****                 (void)PWM_Green_ReadCapture();
 458:Generated_Source\PSoC5/PWM_Green.c ****             }
 459:Generated_Source\PSoC5/PWM_Green.c ****         }
 460:Generated_Source\PSoC5/PWM_Green.c **** 
 461:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* PWM_Green_UseStatus */
 462:Generated_Source\PSoC5/PWM_Green.c **** 
 463:Generated_Source\PSoC5/PWM_Green.c **** #endif /* !PWM_Green_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_Green.c **** 
 465:Generated_Source\PSoC5/PWM_Green.c **** 
 466:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_Green.c **** * Function Name: PWM_Green_WritePeriod
 468:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_Green.c **** *
 470:Generated_Source\PSoC5/PWM_Green.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_Green.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_Green.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_Green.c **** *
 474:Generated_Source\PSoC5/PWM_Green.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_Green.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_Green.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_Green.c **** *
 478:Generated_Source\PSoC5/PWM_Green.c **** * Return:
 479:Generated_Source\PSoC5/PWM_Green.c **** *  None
 480:Generated_Source\PSoC5/PWM_Green.c **** *
 481:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_Green.c **** void PWM_Green_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_Green.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/PWM_Green.c ****     #if(PWM_Green_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_Green.c ****         CY_SET_REG16(PWM_Green_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_Green.c ****     #else
 487:Generated_Source\PSoC5/PWM_Green.c ****         CY_SET_REG8(PWM_Green_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 45650040 		.word	1073767749
 148              		.cfi_endproc
 149              	.LFE6:
 150              		.size	PWM_Green_WritePeriod, .-PWM_Green_WritePeriod
 151              		.section	.text.PWM_Green_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_Green_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_Green_WriteCompare, %function
 157              	PWM_Green_WriteCompare:
 158              	.LFB7:
 488:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_Green.c **** }
 490:Generated_Source\PSoC5/PWM_Green.c **** 
 491:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_Green.c **** 
 493:Generated_Source\PSoC5/PWM_Green.c **** 
 494:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_WriteCompare
 496:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_Green.c ****     *
 498:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_Green.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_Green.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_Green.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_Green.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_Green.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_Green.c ****     *
 505:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_Green.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_Green.c ****     *
 508:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 510:Generated_Source\PSoC5/PWM_Green.c ****     *
 511:Generated_Source\PSoC5/PWM_Green.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_Green.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_Green.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_Green.c ****     *
 515:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_Green.c ****                                        
 518:Generated_Source\PSoC5/PWM_Green.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:Generated_Source\PSoC5/PWM_Green.c ****         #if(PWM_Green_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG16(PWM_Green_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 13


 521:Generated_Source\PSoC5/PWM_Green.c ****         #else
 522:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG8(PWM_Green_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 25650040 		.word	1073767717
 173              		.cfi_endproc
 174              	.LFE7:
 175              		.size	PWM_Green_WriteCompare, .-PWM_Green_WriteCompare
 176              		.section	.text.PWM_Green_Init,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_Green_Init
 179              		.thumb
 180              		.thumb_func
 181              		.type	PWM_Green_Init, %function
 182              	PWM_Green_Init:
 183              	.LFB1:
  85:Generated_Source\PSoC5/PWM_Green.c ****     #if (PWM_Green_UsingFixedFunction || PWM_Green_UseControl)
 184              		.loc 1 85 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_Green.c ****                 ((uint8)(~PWM_Green_CTRL_CMPMODE1_MASK));
 192              		.loc 1 117 0
 193 0002 0B4A     		ldr	r2, .L21
 194 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 195 0006 03F0C003 		and	r3, r3, #192
 196              	.LVL3:
 119:Generated_Source\PSoC5/PWM_Green.c ****                                    PWM_Green_DEFAULT_COMPARE1_MODE;
 197              		.loc 1 119 0
 198 000a 43F00903 		orr	r3, r3, #9
 199              	.LVL4:
 200 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_Green.c ****         #else /* (PWM_Green_Resolution == 16)*/
 201              		.loc 1 126 0
 202 0010 1F32     		adds	r2, r2, #31
 203 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 204 0014 43F00103 		orr	r3, r3, #1
 205 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (!PWM_Green_UsingFixedFunction) */
 206              		.loc 1 133 0
 207 001a FF20     		movs	r0, #255
 208 001c FFF7FEFF 		bl	PWM_Green_WriteCounter
 209              	.LVL5:
 136:Generated_Source\PSoC5/PWM_Green.c **** 
 210              		.loc 1 136 0
 211 0020 FF20     		movs	r0, #255
 212 0022 FFF7FEFF 		bl	PWM_Green_WritePeriod
 213              	.LVL6:
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 14


 139:Generated_Source\PSoC5/PWM_Green.c ****         #else
 214              		.loc 1 139 0
 215 0026 FF20     		movs	r0, #255
 216 0028 FFF7FEFF 		bl	PWM_Green_WriteCompare
 217              	.LVL7:
 218 002c 08BD     		pop	{r3, pc}
 219              	.L22:
 220 002e 00BF     		.align	2
 221              	.L21:
 222 0030 76650040 		.word	1073767798
 223              		.cfi_endproc
 224              	.LFE1:
 225              		.size	PWM_Green_Init, .-PWM_Green_Init
 226              		.section	.text.PWM_Green_Start,"ax",%progbits
 227              		.align	2
 228              		.global	PWM_Green_Start
 229              		.thumb
 230              		.thumb_func
 231              		.type	PWM_Green_Start, %function
 232              	PWM_Green_Start:
 233              	.LFB0:
  56:Generated_Source\PSoC5/PWM_Green.c ****     /* If not Initialized then initialize all required hardware and software */
 234              		.loc 1 56 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_Green.c ****     {
 242              		.loc 1 58 0
 243 0002 054B     		ldr	r3, .L26
 244 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 0006 23B9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/PWM_Green.c ****         PWM_Green_initVar = 1u;
 246              		.loc 1 60 0
 247 0008 FFF7FEFF 		bl	PWM_Green_Init
 248              	.LVL8:
  61:Generated_Source\PSoC5/PWM_Green.c ****     }
 249              		.loc 1 61 0
 250 000c 0122     		movs	r2, #1
 251 000e 024B     		ldr	r3, .L26
 252 0010 1A70     		strb	r2, [r3]
 253              	.L24:
  63:Generated_Source\PSoC5/PWM_Green.c **** 
 254              		.loc 1 63 0
 255 0012 FFF7FEFF 		bl	PWM_Green_Enable
 256              	.LVL9:
 257 0016 08BD     		pop	{r3, pc}
 258              	.L27:
 259              		.align	2
 260              	.L26:
 261 0018 00000000 		.word	.LANCHOR0
 262              		.cfi_endproc
 263              	.LFE0:
 264              		.size	PWM_Green_Start, .-PWM_Green_Start
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 15


 265              		.section	.text.PWM_Green_ReadControlRegister,"ax",%progbits
 266              		.align	2
 267              		.global	PWM_Green_ReadControlRegister
 268              		.thumb
 269              		.thumb_func
 270              		.type	PWM_Green_ReadControlRegister, %function
 271              	PWM_Green_ReadControlRegister:
 272              	.LFB8:
 523:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_Green.c **** 
 525:Generated_Source\PSoC5/PWM_Green.c ****         #if (PWM_Green_PWMMode == PWM_Green__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_Green.c ****             #if(PWM_Green_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_Green.c ****                 CY_SET_REG16(PWM_Green_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_Green.c ****             #else
 529:Generated_Source\PSoC5/PWM_Green.c ****                 CY_SET_REG8(PWM_Green_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_Green.c ****             #endif /* (PWM_Green_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_PWMMode == PWM_Green__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_Green.c ****     }
 533:Generated_Source\PSoC5/PWM_Green.c **** 
 534:Generated_Source\PSoC5/PWM_Green.c **** 
 535:Generated_Source\PSoC5/PWM_Green.c **** #else
 536:Generated_Source\PSoC5/PWM_Green.c **** 
 537:Generated_Source\PSoC5/PWM_Green.c **** 
 538:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_WriteCompare1
 540:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_Green.c ****     *
 542:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_Green.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_Green.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_Green.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_Green.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_Green.c ****     *
 548:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_Green.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_Green.c ****     *
 551:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 553:Generated_Source\PSoC5/PWM_Green.c ****     *
 554:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_Green.c ****                                         
 557:Generated_Source\PSoC5/PWM_Green.c ****     {
 558:Generated_Source\PSoC5/PWM_Green.c ****         #if(PWM_Green_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG16(PWM_Green_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_Green.c ****         #else
 561:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG8(PWM_Green_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_Green.c ****     }
 564:Generated_Source\PSoC5/PWM_Green.c **** 
 565:Generated_Source\PSoC5/PWM_Green.c **** 
 566:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_WriteCompare2
 568:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_Green.c ****     *
 570:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_Green.c ****     *  This funtion is used to change the compare value, for compare1 output.
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 16


 572:Generated_Source\PSoC5/PWM_Green.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_Green.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_Green.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_Green.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_Green.c ****     *
 577:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_Green.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_Green.c ****     *
 580:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 582:Generated_Source\PSoC5/PWM_Green.c ****     *
 583:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_Green.c ****                                         
 586:Generated_Source\PSoC5/PWM_Green.c ****     {
 587:Generated_Source\PSoC5/PWM_Green.c ****         #if(PWM_Green_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG16(PWM_Green_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_Green.c ****         #else
 590:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG8(PWM_Green_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_Green.c ****     }
 593:Generated_Source\PSoC5/PWM_Green.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_Green.c **** 
 595:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_Green.c **** 
 597:Generated_Source\PSoC5/PWM_Green.c **** 
 598:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_Green.c ****     *
 602:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_Green.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_Green.c ****     *
 605:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_Green.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_Green.c ****     *
 608:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 610:Generated_Source\PSoC5/PWM_Green.c ****     *
 611:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_Green.c ****     {
 614:Generated_Source\PSoC5/PWM_Green.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_Green.c ****         #if(!PWM_Green_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_Green.c ****             CY_SET_REG8(PWM_Green_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_Green.c ****         #else
 618:Generated_Source\PSoC5/PWM_Green.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_Green.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_Green.c ****             PWM_Green_DEADBAND_COUNT &= ((uint8)(~PWM_Green_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_Green.c **** 
 622:Generated_Source\PSoC5/PWM_Green.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_Green.c ****             #if(PWM_Green_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Green_DEADBAND_COUNT_SH
 625:Generated_Source\PSoC5/PWM_Green.c ****                                                     PWM_Green_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_Green.c ****             #else
 627:Generated_Source\PSoC5/PWM_Green.c ****                 PWM_Green_DEADBAND_COUNT |= deadtime & PWM_Green_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_Green.c ****             #endif /* (PWM_Green_DEADBAND_COUNT_SHIFT) */
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 17


 629:Generated_Source\PSoC5/PWM_Green.c **** 
 630:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (!PWM_Green_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_Green.c ****     }
 632:Generated_Source\PSoC5/PWM_Green.c **** 
 633:Generated_Source\PSoC5/PWM_Green.c **** 
 634:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_Green.c ****     *
 638:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_Green.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_Green.c ****     *
 641:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 643:Generated_Source\PSoC5/PWM_Green.c ****     *
 644:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_Green.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_Green.c ****     *
 647:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_Green.c ****     {
 650:Generated_Source\PSoC5/PWM_Green.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_Green.c ****         #if(!PWM_Green_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_Green.c ****             return (CY_GET_REG8(PWM_Green_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_Green.c ****         #else
 654:Generated_Source\PSoC5/PWM_Green.c **** 
 655:Generated_Source\PSoC5/PWM_Green.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_Green.c ****             #if(PWM_Green_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_Green.c ****                 return ((uint8)(((uint8)(PWM_Green_DEADBAND_COUNT & PWM_Green_DEADBAND_COUNT_MASK))
 658:Generated_Source\PSoC5/PWM_Green.c ****                                                                            PWM_Green_DEADBAND_COUNT
 659:Generated_Source\PSoC5/PWM_Green.c ****             #else
 660:Generated_Source\PSoC5/PWM_Green.c ****                 return (PWM_Green_DEADBAND_COUNT & PWM_Green_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_Green.c ****             #endif /* (PWM_Green_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (!PWM_Green_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_Green.c ****     }
 664:Generated_Source\PSoC5/PWM_Green.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_Green.c **** 
 666:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_UseStatus || PWM_Green_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_Green.c **** 
 668:Generated_Source\PSoC5/PWM_Green.c **** 
 669:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_Green.c ****     *
 673:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_Green.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_Green.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_Green.c ****     *
 677:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_Green.c ****     *
 680:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 682:Generated_Source\PSoC5/PWM_Green.c ****     *
 683:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_Green.c ****     {
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 18


 686:Generated_Source\PSoC5/PWM_Green.c ****         CY_SET_REG8(PWM_Green_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_Green.c ****     }
 688:Generated_Source\PSoC5/PWM_Green.c **** 
 689:Generated_Source\PSoC5/PWM_Green.c **** 
 690:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_Green.c ****     *
 694:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_Green.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_Green.c ****     *
 697:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 699:Generated_Source\PSoC5/PWM_Green.c ****     *
 700:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_Green.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_Green.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_Green.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_Green.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_Green.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_Green.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_Green.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_Green.c ****     *
 710:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_Green.c ****     {
 713:Generated_Source\PSoC5/PWM_Green.c ****         return (CY_GET_REG8(PWM_Green_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM_Green.c ****     }
 715:Generated_Source\PSoC5/PWM_Green.c **** 
 716:Generated_Source\PSoC5/PWM_Green.c **** #endif /* (PWM_Green_UseStatus || PWM_Green_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_Green.c **** 
 718:Generated_Source\PSoC5/PWM_Green.c **** 
 719:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_UseControl)
 720:Generated_Source\PSoC5/PWM_Green.c **** 
 721:Generated_Source\PSoC5/PWM_Green.c **** 
 722:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_Green.c ****     *
 726:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_Green.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_Green.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_Green.c ****     *
 730:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 732:Generated_Source\PSoC5/PWM_Green.c ****     *
 733:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_Green.c ****     *
 736:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_Green.c ****     {
 273              		.loc 1 738 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 19


 277              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_Green.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_Green.c **** 
 741:Generated_Source\PSoC5/PWM_Green.c ****         result = CY_GET_REG8(PWM_Green_CONTROL_PTR);
 278              		.loc 1 741 0
 279 0000 014B     		ldr	r3, .L29
 280 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 281              	.LVL10:
 742:Generated_Source\PSoC5/PWM_Green.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_Green.c ****     }
 282              		.loc 1 743 0
 283 0004 7047     		bx	lr
 284              	.L30:
 285 0006 00BF     		.align	2
 286              	.L29:
 287 0008 76650040 		.word	1073767798
 288              		.cfi_endproc
 289              	.LFE8:
 290              		.size	PWM_Green_ReadControlRegister, .-PWM_Green_ReadControlRegister
 291              		.section	.text.PWM_Green_WriteControlRegister,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_Green_WriteControlRegister
 294              		.thumb
 295              		.thumb_func
 296              		.type	PWM_Green_WriteControlRegister, %function
 297              	PWM_Green_WriteControlRegister:
 298              	.LFB9:
 744:Generated_Source\PSoC5/PWM_Green.c **** 
 745:Generated_Source\PSoC5/PWM_Green.c **** 
 746:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_Green.c ****     *
 750:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_Green.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_Green.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_Green.c ****     *
 754:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_Green.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_Green.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_Green.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_Green.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_Green.c ****     *
 761:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 763:Generated_Source\PSoC5/PWM_Green.c ****     *
 764:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_Green.c ****     void PWM_Green_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_Green.c ****     {
 299              		.loc 1 766 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304              	.LVL11:
 767:Generated_Source\PSoC5/PWM_Green.c ****         CY_SET_REG8(PWM_Green_CONTROL_PTR, control);
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 20


 305              		.loc 1 767 0
 306 0000 014B     		ldr	r3, .L32
 307 0002 1870     		strb	r0, [r3]
 308 0004 7047     		bx	lr
 309              	.L33:
 310 0006 00BF     		.align	2
 311              	.L32:
 312 0008 76650040 		.word	1073767798
 313              		.cfi_endproc
 314              	.LFE9:
 315              		.size	PWM_Green_WriteControlRegister, .-PWM_Green_WriteControlRegister
 316              		.section	.text.PWM_Green_ReadCapture,"ax",%progbits
 317              		.align	2
 318              		.global	PWM_Green_ReadCapture
 319              		.thumb
 320              		.thumb_func
 321              		.type	PWM_Green_ReadCapture, %function
 322              	PWM_Green_ReadCapture:
 323              	.LFB10:
 768:Generated_Source\PSoC5/PWM_Green.c ****     }
 769:Generated_Source\PSoC5/PWM_Green.c **** 
 770:Generated_Source\PSoC5/PWM_Green.c **** #endif /* (PWM_Green_UseControl) */
 771:Generated_Source\PSoC5/PWM_Green.c **** 
 772:Generated_Source\PSoC5/PWM_Green.c **** 
 773:Generated_Source\PSoC5/PWM_Green.c **** #if (!PWM_Green_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_Green.c **** 
 775:Generated_Source\PSoC5/PWM_Green.c **** 
 776:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadCapture
 778:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_Green.c ****     *
 780:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_Green.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_Green.c ****     *
 783:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 785:Generated_Source\PSoC5/PWM_Green.c ****     *
 786:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_Green.c ****     *
 789:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_Green.c ****     {
 324              		.loc 1 791 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_Green.c ****         return (CY_GET_REG8(PWM_Green_CAPTURE_LSB_PTR));
 329              		.loc 1 792 0
 330 0000 014B     		ldr	r3, .L35
 331 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_Green.c ****     }
 332              		.loc 1 793 0
 333 0004 7047     		bx	lr
 334              	.L36:
 335 0006 00BF     		.align	2
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 21


 336              	.L35:
 337 0008 55650040 		.word	1073767765
 338              		.cfi_endproc
 339              	.LFE10:
 340              		.size	PWM_Green_ReadCapture, .-PWM_Green_ReadCapture
 341              		.section	.text.PWM_Green_ReadCompare,"ax",%progbits
 342              		.align	2
 343              		.global	PWM_Green_ReadCompare
 344              		.thumb
 345              		.thumb_func
 346              		.type	PWM_Green_ReadCompare, %function
 347              	PWM_Green_ReadCompare:
 348              	.LFB11:
 794:Generated_Source\PSoC5/PWM_Green.c **** 
 795:Generated_Source\PSoC5/PWM_Green.c **** #endif /* (!PWM_Green_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_Green.c **** 
 797:Generated_Source\PSoC5/PWM_Green.c **** 
 798:Generated_Source\PSoC5/PWM_Green.c **** #if (PWM_Green_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_Green.c **** 
 800:Generated_Source\PSoC5/PWM_Green.c **** 
 801:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadCompare
 803:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_Green.c ****     *
 805:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_Green.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_Green.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_Green.c ****     *
 809:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 811:Generated_Source\PSoC5/PWM_Green.c ****     *
 812:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_Green.c ****     *
 815:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_Green.c ****     {
 349              		.loc 1 817 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 818:Generated_Source\PSoC5/PWM_Green.c ****         #if(PWM_Green_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_Green.c ****             return ((uint8)CY_GET_REG16(PWM_Green_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_Green.c ****         #else
 821:Generated_Source\PSoC5/PWM_Green.c ****             return (CY_GET_REG8(PWM_Green_COMPARE1_LSB_PTR));
 354              		.loc 1 821 0
 355 0000 014B     		ldr	r3, .L38
 356 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/PWM_Green.c ****         #endif /* (PWM_Green_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_Green.c ****     }
 357              		.loc 1 823 0
 358 0004 7047     		bx	lr
 359              	.L39:
 360 0006 00BF     		.align	2
 361              	.L38:
 362 0008 25650040 		.word	1073767717
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 22


 363              		.cfi_endproc
 364              	.LFE11:
 365              		.size	PWM_Green_ReadCompare, .-PWM_Green_ReadCompare
 366              		.section	.text.PWM_Green_ReadPeriod,"ax",%progbits
 367              		.align	2
 368              		.global	PWM_Green_ReadPeriod
 369              		.thumb
 370              		.thumb_func
 371              		.type	PWM_Green_ReadPeriod, %function
 372              	PWM_Green_ReadPeriod:
 373              	.LFB12:
 824:Generated_Source\PSoC5/PWM_Green.c **** 
 825:Generated_Source\PSoC5/PWM_Green.c **** #else
 826:Generated_Source\PSoC5/PWM_Green.c **** 
 827:Generated_Source\PSoC5/PWM_Green.c **** 
 828:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadCompare1
 830:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_Green.c ****     *
 832:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_Green.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_Green.c ****     *
 835:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 837:Generated_Source\PSoC5/PWM_Green.c ****     *
 838:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_Green.c ****     *
 841:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_Green.c ****     {
 844:Generated_Source\PSoC5/PWM_Green.c ****         return (CY_GET_REG8(PWM_Green_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_Green.c ****     }
 846:Generated_Source\PSoC5/PWM_Green.c **** 
 847:Generated_Source\PSoC5/PWM_Green.c **** 
 848:Generated_Source\PSoC5/PWM_Green.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_Green.c ****     * Function Name: PWM_Green_ReadCompare2
 850:Generated_Source\PSoC5/PWM_Green.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_Green.c ****     *
 852:Generated_Source\PSoC5/PWM_Green.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_Green.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_Green.c ****     *
 855:Generated_Source\PSoC5/PWM_Green.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_Green.c ****     *  None
 857:Generated_Source\PSoC5/PWM_Green.c ****     *
 858:Generated_Source\PSoC5/PWM_Green.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_Green.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_Green.c ****     *
 861:Generated_Source\PSoC5/PWM_Green.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_Green.c ****     uint8 PWM_Green_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_Green.c ****     {
 864:Generated_Source\PSoC5/PWM_Green.c ****         return (CY_GET_REG8(PWM_Green_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_Green.c ****     }
 866:Generated_Source\PSoC5/PWM_Green.c **** 
 867:Generated_Source\PSoC5/PWM_Green.c **** #endif /* (PWM_Green_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_Green.c **** 
 869:Generated_Source\PSoC5/PWM_Green.c **** 
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 23


 870:Generated_Source\PSoC5/PWM_Green.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_Green.c **** * Function Name: PWM_Green_ReadPeriod
 872:Generated_Source\PSoC5/PWM_Green.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_Green.c **** *
 874:Generated_Source\PSoC5/PWM_Green.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_Green.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_Green.c **** *
 877:Generated_Source\PSoC5/PWM_Green.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_Green.c **** *  None
 879:Generated_Source\PSoC5/PWM_Green.c **** *
 880:Generated_Source\PSoC5/PWM_Green.c **** * Return:
 881:Generated_Source\PSoC5/PWM_Green.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_Green.c **** *
 883:Generated_Source\PSoC5/PWM_Green.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_Green.c **** uint8 PWM_Green_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_Green.c **** {
 374              		.loc 1 885 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_Green.c ****     #if(PWM_Green_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_Green.c ****         return ((uint8)CY_GET_REG16(PWM_Green_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_Green.c ****     #else
 889:Generated_Source\PSoC5/PWM_Green.c ****         return (CY_GET_REG8(PWM_Green_PERIOD_LSB_PTR));
 379              		.loc 1 889 0
 380 0000 014B     		ldr	r3, .L41
 381 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_Green.c ****     #endif /* (PWM_Green_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_Green.c **** }
 382              		.loc 1 891 0
 383 0004 7047     		bx	lr
 384              	.L42:
 385 0006 00BF     		.align	2
 386              	.L41:
 387 0008 45650040 		.word	1073767749
 388              		.cfi_endproc
 389              	.LFE12:
 390              		.size	PWM_Green_ReadPeriod, .-PWM_Green_ReadPeriod
 391              		.global	PWM_Green_initVar
 392              		.bss
 393              		.set	.LANCHOR0,. + 0
 394              		.type	PWM_Green_initVar, %object
 395              		.size	PWM_Green_initVar, 1
 396              	PWM_Green_initVar:
 397 0000 00       		.space	1
 398              		.text
 399              	.Letext0:
 400              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 75020000 		.4byte	0x275
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c 67000000 		.4byte	.LASF34
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 24


 409 0010 0C       		.byte	0xc
 410 0011 E5020000 		.4byte	.LASF35
 411 0015 30010000 		.4byte	.LASF36
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 01       		.byte	0x1
 417 0027 06       		.byte	0x6
 418 0028 D1020000 		.4byte	.LASF0
 419 002c 02       		.uleb128 0x2
 420 002d 01       		.byte	0x1
 421 002e 08       		.byte	0x8
 422 002f 59000000 		.4byte	.LASF1
 423 0033 02       		.uleb128 0x2
 424 0034 02       		.byte	0x2
 425 0035 05       		.byte	0x5
 426 0036 67020000 		.4byte	.LASF2
 427 003a 02       		.uleb128 0x2
 428 003b 02       		.byte	0x2
 429 003c 07       		.byte	0x7
 430 003d 38000000 		.4byte	.LASF3
 431 0041 02       		.uleb128 0x2
 432 0042 04       		.byte	0x4
 433 0043 05       		.byte	0x5
 434 0044 BC020000 		.4byte	.LASF4
 435 0048 02       		.uleb128 0x2
 436 0049 04       		.byte	0x4
 437 004a 07       		.byte	0x7
 438 004b FA000000 		.4byte	.LASF5
 439 004f 02       		.uleb128 0x2
 440 0050 08       		.byte	0x8
 441 0051 05       		.byte	0x5
 442 0052 54020000 		.4byte	.LASF6
 443 0056 02       		.uleb128 0x2
 444 0057 08       		.byte	0x8
 445 0058 07       		.byte	0x7
 446 0059 03020000 		.4byte	.LASF7
 447 005d 03       		.uleb128 0x3
 448 005e 04       		.byte	0x4
 449 005f 05       		.byte	0x5
 450 0060 696E7400 		.ascii	"int\000"
 451 0064 02       		.uleb128 0x2
 452 0065 04       		.byte	0x4
 453 0066 07       		.byte	0x7
 454 0067 E5010000 		.4byte	.LASF8
 455 006b 04       		.uleb128 0x4
 456 006c 22010000 		.4byte	.LASF12
 457 0070 02       		.byte	0x2
 458 0071 E801     		.2byte	0x1e8
 459 0073 2C000000 		.4byte	0x2c
 460 0077 02       		.uleb128 0x2
 461 0078 04       		.byte	0x4
 462 0079 04       		.byte	0x4
 463 007a 4B000000 		.4byte	.LASF9
 464 007e 02       		.uleb128 0x2
 465 007f 08       		.byte	0x8
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 25


 466 0080 04       		.byte	0x4
 467 0081 9C010000 		.4byte	.LASF10
 468 0085 02       		.uleb128 0x2
 469 0086 01       		.byte	0x1
 470 0087 08       		.byte	0x8
 471 0088 62020000 		.4byte	.LASF11
 472 008c 04       		.uleb128 0x4
 473 008d F5000000 		.4byte	.LASF13
 474 0091 02       		.byte	0x2
 475 0092 9202     		.2byte	0x292
 476 0094 98000000 		.4byte	0x98
 477 0098 05       		.uleb128 0x5
 478 0099 6B000000 		.4byte	0x6b
 479 009d 02       		.uleb128 0x2
 480 009e 08       		.byte	0x8
 481 009f 04       		.byte	0x4
 482 00a0 C5020000 		.4byte	.LASF14
 483 00a4 02       		.uleb128 0x2
 484 00a5 04       		.byte	0x4
 485 00a6 07       		.byte	0x7
 486 00a7 4B020000 		.4byte	.LASF15
 487 00ab 06       		.uleb128 0x6
 488 00ac F2010000 		.4byte	.LASF16
 489 00b0 01       		.byte	0x1
 490 00b1 C7       		.byte	0xc7
 491 00b2 00000000 		.4byte	.LFB2
 492 00b6 10000000 		.4byte	.LFE2-.LFB2
 493 00ba 01       		.uleb128 0x1
 494 00bb 9C       		.byte	0x9c
 495 00bc 06       		.uleb128 0x6
 496 00bd 08030000 		.4byte	.LASF17
 497 00c1 01       		.byte	0x1
 498 00c2 E9       		.byte	0xe9
 499 00c3 00000000 		.4byte	.LFB3
 500 00c7 10000000 		.4byte	.LFE3-.LFB3
 501 00cb 01       		.uleb128 0x1
 502 00cc 9C       		.byte	0x9c
 503 00cd 07       		.uleb128 0x7
 504 00ce 8F020000 		.4byte	.LASF18
 505 00d2 01       		.byte	0x1
 506 00d3 9301     		.2byte	0x193
 507 00d5 00000000 		.4byte	.LFB4
 508 00d9 0C000000 		.4byte	.LFE4-.LFB4
 509 00dd 01       		.uleb128 0x1
 510 00de 9C       		.byte	0x9c
 511 00df F2000000 		.4byte	0xf2
 512 00e3 08       		.uleb128 0x8
 513 00e4 51000000 		.4byte	.LASF20
 514 00e8 01       		.byte	0x1
 515 00e9 9301     		.2byte	0x193
 516 00eb 6B000000 		.4byte	0x6b
 517 00ef 01       		.uleb128 0x1
 518 00f0 50       		.byte	0x50
 519 00f1 00       		.byte	0
 520 00f2 09       		.uleb128 0x9
 521 00f3 30020000 		.4byte	.LASF30
 522 00f7 01       		.byte	0x1
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 26


 523 00f8 A901     		.2byte	0x1a9
 524 00fa 6B000000 		.4byte	0x6b
 525 00fe 00000000 		.4byte	.LFB5
 526 0102 14000000 		.4byte	.LFE5-.LFB5
 527 0106 01       		.uleb128 0x1
 528 0107 9C       		.byte	0x9c
 529 0108 07       		.uleb128 0x7
 530 0109 A6020000 		.4byte	.LASF19
 531 010d 01       		.byte	0x1
 532 010e E201     		.2byte	0x1e2
 533 0110 00000000 		.4byte	.LFB6
 534 0114 0C000000 		.4byte	.LFE6-.LFB6
 535 0118 01       		.uleb128 0x1
 536 0119 9C       		.byte	0x9c
 537 011a 2D010000 		.4byte	0x12d
 538 011e 08       		.uleb128 0x8
 539 011f 31000000 		.4byte	.LASF21
 540 0123 01       		.byte	0x1
 541 0124 E201     		.2byte	0x1e2
 542 0126 6B000000 		.4byte	0x6b
 543 012a 01       		.uleb128 0x1
 544 012b 50       		.byte	0x50
 545 012c 00       		.byte	0
 546 012d 07       		.uleb128 0x7
 547 012e A3010000 		.4byte	.LASF22
 548 0132 01       		.byte	0x1
 549 0133 0402     		.2byte	0x204
 550 0135 00000000 		.4byte	.LFB7
 551 0139 0C000000 		.4byte	.LFE7-.LFB7
 552 013d 01       		.uleb128 0x1
 553 013e 9C       		.byte	0x9c
 554 013f 52010000 		.4byte	0x152
 555 0143 08       		.uleb128 0x8
 556 0144 DD020000 		.4byte	.LASF23
 557 0148 01       		.byte	0x1
 558 0149 0402     		.2byte	0x204
 559 014b 6B000000 		.4byte	0x6b
 560 014f 01       		.uleb128 0x1
 561 0150 50       		.byte	0x50
 562 0151 00       		.byte	0
 563 0152 0A       		.uleb128 0xa
 564 0153 1A020000 		.4byte	.LASF24
 565 0157 01       		.byte	0x1
 566 0158 54       		.byte	0x54
 567 0159 00000000 		.4byte	.LFB1
 568 015d 34000000 		.4byte	.LFE1-.LFB1
 569 0161 01       		.uleb128 0x1
 570 0162 9C       		.byte	0x9c
 571 0163 AF010000 		.4byte	0x1af
 572 0167 0B       		.uleb128 0xb
 573 0168 46020000 		.4byte	.LASF26
 574 016c 01       		.byte	0x1
 575 016d 57       		.byte	0x57
 576 016e 6B000000 		.4byte	0x6b
 577 0172 00000000 		.4byte	.LLST0
 578 0176 0C       		.uleb128 0xc
 579 0177 20000000 		.4byte	.LVL5
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 27


 580 017b CD000000 		.4byte	0xcd
 581 017f 8A010000 		.4byte	0x18a
 582 0183 0D       		.uleb128 0xd
 583 0184 01       		.uleb128 0x1
 584 0185 50       		.byte	0x50
 585 0186 02       		.uleb128 0x2
 586 0187 09       		.byte	0x9
 587 0188 FF       		.byte	0xff
 588 0189 00       		.byte	0
 589 018a 0C       		.uleb128 0xc
 590 018b 26000000 		.4byte	.LVL6
 591 018f 08010000 		.4byte	0x108
 592 0193 9E010000 		.4byte	0x19e
 593 0197 0D       		.uleb128 0xd
 594 0198 01       		.uleb128 0x1
 595 0199 50       		.byte	0x50
 596 019a 02       		.uleb128 0x2
 597 019b 09       		.byte	0x9
 598 019c FF       		.byte	0xff
 599 019d 00       		.byte	0
 600 019e 0E       		.uleb128 0xe
 601 019f 2C000000 		.4byte	.LVL7
 602 01a3 2D010000 		.4byte	0x12d
 603 01a7 0D       		.uleb128 0xd
 604 01a8 01       		.uleb128 0x1
 605 01a9 50       		.byte	0x50
 606 01aa 02       		.uleb128 0x2
 607 01ab 09       		.byte	0x9
 608 01ac FF       		.byte	0xff
 609 01ad 00       		.byte	0
 610 01ae 00       		.byte	0
 611 01af 0A       		.uleb128 0xa
 612 01b0 17030000 		.4byte	.LASF25
 613 01b4 01       		.byte	0x1
 614 01b5 37       		.byte	0x37
 615 01b6 00000000 		.4byte	.LFB0
 616 01ba 1C000000 		.4byte	.LFE0-.LFB0
 617 01be 01       		.uleb128 0x1
 618 01bf 9C       		.byte	0x9c
 619 01c0 D7010000 		.4byte	0x1d7
 620 01c4 0F       		.uleb128 0xf
 621 01c5 0C000000 		.4byte	.LVL8
 622 01c9 52010000 		.4byte	0x152
 623 01cd 0F       		.uleb128 0xf
 624 01ce 16000000 		.4byte	.LVL9
 625 01d2 AB000000 		.4byte	0xab
 626 01d6 00       		.byte	0
 627 01d7 10       		.uleb128 0x10
 628 01d8 71020000 		.4byte	.LASF37
 629 01dc 01       		.byte	0x1
 630 01dd E102     		.2byte	0x2e1
 631 01df 6B000000 		.4byte	0x6b
 632 01e3 00000000 		.4byte	.LFB8
 633 01e7 0C000000 		.4byte	.LFE8-.LFB8
 634 01eb 01       		.uleb128 0x1
 635 01ec 9C       		.byte	0x9c
 636 01ed 00020000 		.4byte	0x200
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 28


 637 01f1 11       		.uleb128 0x11
 638 01f2 29020000 		.4byte	.LASF27
 639 01f6 01       		.byte	0x1
 640 01f7 E302     		.2byte	0x2e3
 641 01f9 6B000000 		.4byte	0x6b
 642 01fd 01       		.uleb128 0x1
 643 01fe 50       		.byte	0x50
 644 01ff 00       		.byte	0
 645 0200 07       		.uleb128 0x7
 646 0201 12000000 		.4byte	.LASF28
 647 0205 01       		.byte	0x1
 648 0206 FD02     		.2byte	0x2fd
 649 0208 00000000 		.4byte	.LFB9
 650 020c 0C000000 		.4byte	.LFE9-.LFB9
 651 0210 01       		.uleb128 0x1
 652 0211 9C       		.byte	0x9c
 653 0212 25020000 		.4byte	0x225
 654 0216 08       		.uleb128 0x8
 655 0217 28010000 		.4byte	.LASF29
 656 021b 01       		.byte	0x1
 657 021c FD02     		.2byte	0x2fd
 658 021e 6B000000 		.4byte	0x6b
 659 0222 01       		.uleb128 0x1
 660 0223 50       		.byte	0x50
 661 0224 00       		.byte	0
 662 0225 09       		.uleb128 0x9
 663 0226 0C010000 		.4byte	.LASF31
 664 022a 01       		.byte	0x1
 665 022b 1603     		.2byte	0x316
 666 022d 6B000000 		.4byte	0x6b
 667 0231 00000000 		.4byte	.LFB10
 668 0235 0C000000 		.4byte	.LFE10-.LFB10
 669 0239 01       		.uleb128 0x1
 670 023a 9C       		.byte	0x9c
 671 023b 09       		.uleb128 0x9
 672 023c CF010000 		.4byte	.LASF32
 673 0240 01       		.byte	0x1
 674 0241 3003     		.2byte	0x330
 675 0243 6B000000 		.4byte	0x6b
 676 0247 00000000 		.4byte	.LFB11
 677 024b 0C000000 		.4byte	.LFE11-.LFB11
 678 024f 01       		.uleb128 0x1
 679 0250 9C       		.byte	0x9c
 680 0251 09       		.uleb128 0x9
 681 0252 BA010000 		.4byte	.LASF33
 682 0256 01       		.byte	0x1
 683 0257 7403     		.2byte	0x374
 684 0259 6B000000 		.4byte	0x6b
 685 025d 00000000 		.4byte	.LFB12
 686 0261 0C000000 		.4byte	.LFE12-.LFB12
 687 0265 01       		.uleb128 0x1
 688 0266 9C       		.byte	0x9c
 689 0267 12       		.uleb128 0x12
 690 0268 00000000 		.4byte	.LASF38
 691 026c 01       		.byte	0x1
 692 026d 20       		.byte	0x20
 693 026e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 29


 694 0272 05       		.uleb128 0x5
 695 0273 03       		.byte	0x3
 696 0274 00000000 		.4byte	PWM_Green_initVar
 697 0278 00       		.byte	0
 698              		.section	.debug_abbrev,"",%progbits
 699              	.Ldebug_abbrev0:
 700 0000 01       		.uleb128 0x1
 701 0001 11       		.uleb128 0x11
 702 0002 01       		.byte	0x1
 703 0003 25       		.uleb128 0x25
 704 0004 0E       		.uleb128 0xe
 705 0005 13       		.uleb128 0x13
 706 0006 0B       		.uleb128 0xb
 707 0007 03       		.uleb128 0x3
 708 0008 0E       		.uleb128 0xe
 709 0009 1B       		.uleb128 0x1b
 710 000a 0E       		.uleb128 0xe
 711 000b 55       		.uleb128 0x55
 712 000c 17       		.uleb128 0x17
 713 000d 11       		.uleb128 0x11
 714 000e 01       		.uleb128 0x1
 715 000f 10       		.uleb128 0x10
 716 0010 17       		.uleb128 0x17
 717 0011 00       		.byte	0
 718 0012 00       		.byte	0
 719 0013 02       		.uleb128 0x2
 720 0014 24       		.uleb128 0x24
 721 0015 00       		.byte	0
 722 0016 0B       		.uleb128 0xb
 723 0017 0B       		.uleb128 0xb
 724 0018 3E       		.uleb128 0x3e
 725 0019 0B       		.uleb128 0xb
 726 001a 03       		.uleb128 0x3
 727 001b 0E       		.uleb128 0xe
 728 001c 00       		.byte	0
 729 001d 00       		.byte	0
 730 001e 03       		.uleb128 0x3
 731 001f 24       		.uleb128 0x24
 732 0020 00       		.byte	0
 733 0021 0B       		.uleb128 0xb
 734 0022 0B       		.uleb128 0xb
 735 0023 3E       		.uleb128 0x3e
 736 0024 0B       		.uleb128 0xb
 737 0025 03       		.uleb128 0x3
 738 0026 08       		.uleb128 0x8
 739 0027 00       		.byte	0
 740 0028 00       		.byte	0
 741 0029 04       		.uleb128 0x4
 742 002a 16       		.uleb128 0x16
 743 002b 00       		.byte	0
 744 002c 03       		.uleb128 0x3
 745 002d 0E       		.uleb128 0xe
 746 002e 3A       		.uleb128 0x3a
 747 002f 0B       		.uleb128 0xb
 748 0030 3B       		.uleb128 0x3b
 749 0031 05       		.uleb128 0x5
 750 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 30


 751 0033 13       		.uleb128 0x13
 752 0034 00       		.byte	0
 753 0035 00       		.byte	0
 754 0036 05       		.uleb128 0x5
 755 0037 35       		.uleb128 0x35
 756 0038 00       		.byte	0
 757 0039 49       		.uleb128 0x49
 758 003a 13       		.uleb128 0x13
 759 003b 00       		.byte	0
 760 003c 00       		.byte	0
 761 003d 06       		.uleb128 0x6
 762 003e 2E       		.uleb128 0x2e
 763 003f 00       		.byte	0
 764 0040 3F       		.uleb128 0x3f
 765 0041 19       		.uleb128 0x19
 766 0042 03       		.uleb128 0x3
 767 0043 0E       		.uleb128 0xe
 768 0044 3A       		.uleb128 0x3a
 769 0045 0B       		.uleb128 0xb
 770 0046 3B       		.uleb128 0x3b
 771 0047 0B       		.uleb128 0xb
 772 0048 27       		.uleb128 0x27
 773 0049 19       		.uleb128 0x19
 774 004a 11       		.uleb128 0x11
 775 004b 01       		.uleb128 0x1
 776 004c 12       		.uleb128 0x12
 777 004d 06       		.uleb128 0x6
 778 004e 40       		.uleb128 0x40
 779 004f 18       		.uleb128 0x18
 780 0050 9742     		.uleb128 0x2117
 781 0052 19       		.uleb128 0x19
 782 0053 00       		.byte	0
 783 0054 00       		.byte	0
 784 0055 07       		.uleb128 0x7
 785 0056 2E       		.uleb128 0x2e
 786 0057 01       		.byte	0x1
 787 0058 3F       		.uleb128 0x3f
 788 0059 19       		.uleb128 0x19
 789 005a 03       		.uleb128 0x3
 790 005b 0E       		.uleb128 0xe
 791 005c 3A       		.uleb128 0x3a
 792 005d 0B       		.uleb128 0xb
 793 005e 3B       		.uleb128 0x3b
 794 005f 05       		.uleb128 0x5
 795 0060 27       		.uleb128 0x27
 796 0061 19       		.uleb128 0x19
 797 0062 11       		.uleb128 0x11
 798 0063 01       		.uleb128 0x1
 799 0064 12       		.uleb128 0x12
 800 0065 06       		.uleb128 0x6
 801 0066 40       		.uleb128 0x40
 802 0067 18       		.uleb128 0x18
 803 0068 9742     		.uleb128 0x2117
 804 006a 19       		.uleb128 0x19
 805 006b 01       		.uleb128 0x1
 806 006c 13       		.uleb128 0x13
 807 006d 00       		.byte	0
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 31


 808 006e 00       		.byte	0
 809 006f 08       		.uleb128 0x8
 810 0070 05       		.uleb128 0x5
 811 0071 00       		.byte	0
 812 0072 03       		.uleb128 0x3
 813 0073 0E       		.uleb128 0xe
 814 0074 3A       		.uleb128 0x3a
 815 0075 0B       		.uleb128 0xb
 816 0076 3B       		.uleb128 0x3b
 817 0077 05       		.uleb128 0x5
 818 0078 49       		.uleb128 0x49
 819 0079 13       		.uleb128 0x13
 820 007a 02       		.uleb128 0x2
 821 007b 18       		.uleb128 0x18
 822 007c 00       		.byte	0
 823 007d 00       		.byte	0
 824 007e 09       		.uleb128 0x9
 825 007f 2E       		.uleb128 0x2e
 826 0080 00       		.byte	0
 827 0081 3F       		.uleb128 0x3f
 828 0082 19       		.uleb128 0x19
 829 0083 03       		.uleb128 0x3
 830 0084 0E       		.uleb128 0xe
 831 0085 3A       		.uleb128 0x3a
 832 0086 0B       		.uleb128 0xb
 833 0087 3B       		.uleb128 0x3b
 834 0088 05       		.uleb128 0x5
 835 0089 27       		.uleb128 0x27
 836 008a 19       		.uleb128 0x19
 837 008b 49       		.uleb128 0x49
 838 008c 13       		.uleb128 0x13
 839 008d 11       		.uleb128 0x11
 840 008e 01       		.uleb128 0x1
 841 008f 12       		.uleb128 0x12
 842 0090 06       		.uleb128 0x6
 843 0091 40       		.uleb128 0x40
 844 0092 18       		.uleb128 0x18
 845 0093 9742     		.uleb128 0x2117
 846 0095 19       		.uleb128 0x19
 847 0096 00       		.byte	0
 848 0097 00       		.byte	0
 849 0098 0A       		.uleb128 0xa
 850 0099 2E       		.uleb128 0x2e
 851 009a 01       		.byte	0x1
 852 009b 3F       		.uleb128 0x3f
 853 009c 19       		.uleb128 0x19
 854 009d 03       		.uleb128 0x3
 855 009e 0E       		.uleb128 0xe
 856 009f 3A       		.uleb128 0x3a
 857 00a0 0B       		.uleb128 0xb
 858 00a1 3B       		.uleb128 0x3b
 859 00a2 0B       		.uleb128 0xb
 860 00a3 27       		.uleb128 0x27
 861 00a4 19       		.uleb128 0x19
 862 00a5 11       		.uleb128 0x11
 863 00a6 01       		.uleb128 0x1
 864 00a7 12       		.uleb128 0x12
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 32


 865 00a8 06       		.uleb128 0x6
 866 00a9 40       		.uleb128 0x40
 867 00aa 18       		.uleb128 0x18
 868 00ab 9742     		.uleb128 0x2117
 869 00ad 19       		.uleb128 0x19
 870 00ae 01       		.uleb128 0x1
 871 00af 13       		.uleb128 0x13
 872 00b0 00       		.byte	0
 873 00b1 00       		.byte	0
 874 00b2 0B       		.uleb128 0xb
 875 00b3 34       		.uleb128 0x34
 876 00b4 00       		.byte	0
 877 00b5 03       		.uleb128 0x3
 878 00b6 0E       		.uleb128 0xe
 879 00b7 3A       		.uleb128 0x3a
 880 00b8 0B       		.uleb128 0xb
 881 00b9 3B       		.uleb128 0x3b
 882 00ba 0B       		.uleb128 0xb
 883 00bb 49       		.uleb128 0x49
 884 00bc 13       		.uleb128 0x13
 885 00bd 02       		.uleb128 0x2
 886 00be 17       		.uleb128 0x17
 887 00bf 00       		.byte	0
 888 00c0 00       		.byte	0
 889 00c1 0C       		.uleb128 0xc
 890 00c2 898201   		.uleb128 0x4109
 891 00c5 01       		.byte	0x1
 892 00c6 11       		.uleb128 0x11
 893 00c7 01       		.uleb128 0x1
 894 00c8 31       		.uleb128 0x31
 895 00c9 13       		.uleb128 0x13
 896 00ca 01       		.uleb128 0x1
 897 00cb 13       		.uleb128 0x13
 898 00cc 00       		.byte	0
 899 00cd 00       		.byte	0
 900 00ce 0D       		.uleb128 0xd
 901 00cf 8A8201   		.uleb128 0x410a
 902 00d2 00       		.byte	0
 903 00d3 02       		.uleb128 0x2
 904 00d4 18       		.uleb128 0x18
 905 00d5 9142     		.uleb128 0x2111
 906 00d7 18       		.uleb128 0x18
 907 00d8 00       		.byte	0
 908 00d9 00       		.byte	0
 909 00da 0E       		.uleb128 0xe
 910 00db 898201   		.uleb128 0x4109
 911 00de 01       		.byte	0x1
 912 00df 11       		.uleb128 0x11
 913 00e0 01       		.uleb128 0x1
 914 00e1 31       		.uleb128 0x31
 915 00e2 13       		.uleb128 0x13
 916 00e3 00       		.byte	0
 917 00e4 00       		.byte	0
 918 00e5 0F       		.uleb128 0xf
 919 00e6 898201   		.uleb128 0x4109
 920 00e9 00       		.byte	0
 921 00ea 11       		.uleb128 0x11
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 33


 922 00eb 01       		.uleb128 0x1
 923 00ec 31       		.uleb128 0x31
 924 00ed 13       		.uleb128 0x13
 925 00ee 00       		.byte	0
 926 00ef 00       		.byte	0
 927 00f0 10       		.uleb128 0x10
 928 00f1 2E       		.uleb128 0x2e
 929 00f2 01       		.byte	0x1
 930 00f3 3F       		.uleb128 0x3f
 931 00f4 19       		.uleb128 0x19
 932 00f5 03       		.uleb128 0x3
 933 00f6 0E       		.uleb128 0xe
 934 00f7 3A       		.uleb128 0x3a
 935 00f8 0B       		.uleb128 0xb
 936 00f9 3B       		.uleb128 0x3b
 937 00fa 05       		.uleb128 0x5
 938 00fb 27       		.uleb128 0x27
 939 00fc 19       		.uleb128 0x19
 940 00fd 49       		.uleb128 0x49
 941 00fe 13       		.uleb128 0x13
 942 00ff 11       		.uleb128 0x11
 943 0100 01       		.uleb128 0x1
 944 0101 12       		.uleb128 0x12
 945 0102 06       		.uleb128 0x6
 946 0103 40       		.uleb128 0x40
 947 0104 18       		.uleb128 0x18
 948 0105 9742     		.uleb128 0x2117
 949 0107 19       		.uleb128 0x19
 950 0108 01       		.uleb128 0x1
 951 0109 13       		.uleb128 0x13
 952 010a 00       		.byte	0
 953 010b 00       		.byte	0
 954 010c 11       		.uleb128 0x11
 955 010d 34       		.uleb128 0x34
 956 010e 00       		.byte	0
 957 010f 03       		.uleb128 0x3
 958 0110 0E       		.uleb128 0xe
 959 0111 3A       		.uleb128 0x3a
 960 0112 0B       		.uleb128 0xb
 961 0113 3B       		.uleb128 0x3b
 962 0114 05       		.uleb128 0x5
 963 0115 49       		.uleb128 0x49
 964 0116 13       		.uleb128 0x13
 965 0117 02       		.uleb128 0x2
 966 0118 18       		.uleb128 0x18
 967 0119 00       		.byte	0
 968 011a 00       		.byte	0
 969 011b 12       		.uleb128 0x12
 970 011c 34       		.uleb128 0x34
 971 011d 00       		.byte	0
 972 011e 03       		.uleb128 0x3
 973 011f 0E       		.uleb128 0xe
 974 0120 3A       		.uleb128 0x3a
 975 0121 0B       		.uleb128 0xb
 976 0122 3B       		.uleb128 0x3b
 977 0123 0B       		.uleb128 0xb
 978 0124 49       		.uleb128 0x49
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 34


 979 0125 13       		.uleb128 0x13
 980 0126 3F       		.uleb128 0x3f
 981 0127 19       		.uleb128 0x19
 982 0128 02       		.uleb128 0x2
 983 0129 18       		.uleb128 0x18
 984 012a 00       		.byte	0
 985 012b 00       		.byte	0
 986 012c 00       		.byte	0
 987              		.section	.debug_loc,"",%progbits
 988              	.Ldebug_loc0:
 989              	.LLST0:
 990 0000 0A000000 		.4byte	.LVL3
 991 0004 0E000000 		.4byte	.LVL4
 992 0008 0100     		.2byte	0x1
 993 000a 53       		.byte	0x53
 994 000b 00000000 		.4byte	0
 995 000f 00000000 		.4byte	0
 996              		.section	.debug_aranges,"",%progbits
 997 0000 7C000000 		.4byte	0x7c
 998 0004 0200     		.2byte	0x2
 999 0006 00000000 		.4byte	.Ldebug_info0
 1000 000a 04       		.byte	0x4
 1001 000b 00       		.byte	0
 1002 000c 0000     		.2byte	0
 1003 000e 0000     		.2byte	0
 1004 0010 00000000 		.4byte	.LFB2
 1005 0014 10000000 		.4byte	.LFE2-.LFB2
 1006 0018 00000000 		.4byte	.LFB3
 1007 001c 10000000 		.4byte	.LFE3-.LFB3
 1008 0020 00000000 		.4byte	.LFB4
 1009 0024 0C000000 		.4byte	.LFE4-.LFB4
 1010 0028 00000000 		.4byte	.LFB5
 1011 002c 14000000 		.4byte	.LFE5-.LFB5
 1012 0030 00000000 		.4byte	.LFB6
 1013 0034 0C000000 		.4byte	.LFE6-.LFB6
 1014 0038 00000000 		.4byte	.LFB7
 1015 003c 0C000000 		.4byte	.LFE7-.LFB7
 1016 0040 00000000 		.4byte	.LFB1
 1017 0044 34000000 		.4byte	.LFE1-.LFB1
 1018 0048 00000000 		.4byte	.LFB0
 1019 004c 1C000000 		.4byte	.LFE0-.LFB0
 1020 0050 00000000 		.4byte	.LFB8
 1021 0054 0C000000 		.4byte	.LFE8-.LFB8
 1022 0058 00000000 		.4byte	.LFB9
 1023 005c 0C000000 		.4byte	.LFE9-.LFB9
 1024 0060 00000000 		.4byte	.LFB10
 1025 0064 0C000000 		.4byte	.LFE10-.LFB10
 1026 0068 00000000 		.4byte	.LFB11
 1027 006c 0C000000 		.4byte	.LFE11-.LFB11
 1028 0070 00000000 		.4byte	.LFB12
 1029 0074 0C000000 		.4byte	.LFE12-.LFB12
 1030 0078 00000000 		.4byte	0
 1031 007c 00000000 		.4byte	0
 1032              		.section	.debug_ranges,"",%progbits
 1033              	.Ldebug_ranges0:
 1034 0000 00000000 		.4byte	.LFB2
 1035 0004 10000000 		.4byte	.LFE2
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 35


 1036 0008 00000000 		.4byte	.LFB3
 1037 000c 10000000 		.4byte	.LFE3
 1038 0010 00000000 		.4byte	.LFB4
 1039 0014 0C000000 		.4byte	.LFE4
 1040 0018 00000000 		.4byte	.LFB5
 1041 001c 14000000 		.4byte	.LFE5
 1042 0020 00000000 		.4byte	.LFB6
 1043 0024 0C000000 		.4byte	.LFE6
 1044 0028 00000000 		.4byte	.LFB7
 1045 002c 0C000000 		.4byte	.LFE7
 1046 0030 00000000 		.4byte	.LFB1
 1047 0034 34000000 		.4byte	.LFE1
 1048 0038 00000000 		.4byte	.LFB0
 1049 003c 1C000000 		.4byte	.LFE0
 1050 0040 00000000 		.4byte	.LFB8
 1051 0044 0C000000 		.4byte	.LFE8
 1052 0048 00000000 		.4byte	.LFB9
 1053 004c 0C000000 		.4byte	.LFE9
 1054 0050 00000000 		.4byte	.LFB10
 1055 0054 0C000000 		.4byte	.LFE10
 1056 0058 00000000 		.4byte	.LFB11
 1057 005c 0C000000 		.4byte	.LFE11
 1058 0060 00000000 		.4byte	.LFB12
 1059 0064 0C000000 		.4byte	.LFE12
 1060 0068 00000000 		.4byte	0
 1061 006c 00000000 		.4byte	0
 1062              		.section	.debug_line,"",%progbits
 1063              	.Ldebug_line0:
 1064 0000 3A010000 		.section	.debug_str,"MS",%progbits,1
 1064      02004600 
 1064      00000201 
 1064      FB0E0D00 
 1064      01010101 
 1065              	.LASF38:
 1066 0000 50574D5F 		.ascii	"PWM_Green_initVar\000"
 1066      47726565 
 1066      6E5F696E 
 1066      69745661 
 1066      7200
 1067              	.LASF28:
 1068 0012 50574D5F 		.ascii	"PWM_Green_WriteControlRegister\000"
 1068      47726565 
 1068      6E5F5772 
 1068      69746543 
 1068      6F6E7472 
 1069              	.LASF21:
 1070 0031 70657269 		.ascii	"period\000"
 1070      6F6400
 1071              	.LASF3:
 1072 0038 73686F72 		.ascii	"short unsigned int\000"
 1072      7420756E 
 1072      7369676E 
 1072      65642069 
 1072      6E7400
 1073              	.LASF9:
 1074 004b 666C6F61 		.ascii	"float\000"
 1074      7400
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 36


 1075              	.LASF20:
 1076 0051 636F756E 		.ascii	"counter\000"
 1076      74657200 
 1077              	.LASF1:
 1078 0059 756E7369 		.ascii	"unsigned char\000"
 1078      676E6564 
 1078      20636861 
 1078      7200
 1079              	.LASF34:
 1080 0067 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1080      43313120 
 1080      352E342E 
 1080      31203230 
 1080      31363036 
 1081 009a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1081      20726576 
 1081      6973696F 
 1081      6E203233 
 1081      37373135 
 1082 00cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1082      66756E63 
 1082      74696F6E 
 1082      2D736563 
 1082      74696F6E 
 1083              	.LASF13:
 1084 00f5 72656738 		.ascii	"reg8\000"
 1084      00
 1085              	.LASF5:
 1086 00fa 6C6F6E67 		.ascii	"long unsigned int\000"
 1086      20756E73 
 1086      69676E65 
 1086      6420696E 
 1086      7400
 1087              	.LASF31:
 1088 010c 50574D5F 		.ascii	"PWM_Green_ReadCapture\000"
 1088      47726565 
 1088      6E5F5265 
 1088      61644361 
 1088      70747572 
 1089              	.LASF12:
 1090 0122 75696E74 		.ascii	"uint8\000"
 1090      3800
 1091              	.LASF29:
 1092 0128 636F6E74 		.ascii	"control\000"
 1092      726F6C00 
 1093              	.LASF36:
 1094 0130 443A5C44 		.ascii	"D:\\Darmstadt\\College\\Study\\Semester1\\AMA_EOS\\"
 1094      61726D73 
 1094      74616474 
 1094      5C436F6C 
 1094      6C656765 
 1095 015d 454F535C 		.ascii	"EOS\\Lab\\Assignments\\Lab1\\ReactionGame.cydsn\\Re"
 1095      4C61625C 
 1095      41737369 
 1095      676E6D65 
 1095      6E74735C 
 1096 018b 61637469 		.ascii	"actionGame.cydsn\000"
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 37


 1096      6F6E4761 
 1096      6D652E63 
 1096      7964736E 
 1096      00
 1097              	.LASF10:
 1098 019c 646F7562 		.ascii	"double\000"
 1098      6C6500
 1099              	.LASF22:
 1100 01a3 50574D5F 		.ascii	"PWM_Green_WriteCompare\000"
 1100      47726565 
 1100      6E5F5772 
 1100      69746543 
 1100      6F6D7061 
 1101              	.LASF33:
 1102 01ba 50574D5F 		.ascii	"PWM_Green_ReadPeriod\000"
 1102      47726565 
 1102      6E5F5265 
 1102      61645065 
 1102      72696F64 
 1103              	.LASF32:
 1104 01cf 50574D5F 		.ascii	"PWM_Green_ReadCompare\000"
 1104      47726565 
 1104      6E5F5265 
 1104      6164436F 
 1104      6D706172 
 1105              	.LASF8:
 1106 01e5 756E7369 		.ascii	"unsigned int\000"
 1106      676E6564 
 1106      20696E74 
 1106      00
 1107              	.LASF16:
 1108 01f2 50574D5F 		.ascii	"PWM_Green_Enable\000"
 1108      47726565 
 1108      6E5F456E 
 1108      61626C65 
 1108      00
 1109              	.LASF7:
 1110 0203 6C6F6E67 		.ascii	"long long unsigned int\000"
 1110      206C6F6E 
 1110      6720756E 
 1110      7369676E 
 1110      65642069 
 1111              	.LASF24:
 1112 021a 50574D5F 		.ascii	"PWM_Green_Init\000"
 1112      47726565 
 1112      6E5F496E 
 1112      697400
 1113              	.LASF27:
 1114 0229 72657375 		.ascii	"result\000"
 1114      6C7400
 1115              	.LASF30:
 1116 0230 50574D5F 		.ascii	"PWM_Green_ReadCounter\000"
 1116      47726565 
 1116      6E5F5265 
 1116      6164436F 
 1116      756E7465 
 1117              	.LASF26:
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 38


 1118 0246 6374726C 		.ascii	"ctrl\000"
 1118      00
 1119              	.LASF15:
 1120 024b 73697A65 		.ascii	"sizetype\000"
 1120      74797065 
 1120      00
 1121              	.LASF6:
 1122 0254 6C6F6E67 		.ascii	"long long int\000"
 1122      206C6F6E 
 1122      6720696E 
 1122      7400
 1123              	.LASF11:
 1124 0262 63686172 		.ascii	"char\000"
 1124      00
 1125              	.LASF2:
 1126 0267 73686F72 		.ascii	"short int\000"
 1126      7420696E 
 1126      7400
 1127              	.LASF37:
 1128 0271 50574D5F 		.ascii	"PWM_Green_ReadControlRegister\000"
 1128      47726565 
 1128      6E5F5265 
 1128      6164436F 
 1128      6E74726F 
 1129              	.LASF18:
 1130 028f 50574D5F 		.ascii	"PWM_Green_WriteCounter\000"
 1130      47726565 
 1130      6E5F5772 
 1130      69746543 
 1130      6F756E74 
 1131              	.LASF19:
 1132 02a6 50574D5F 		.ascii	"PWM_Green_WritePeriod\000"
 1132      47726565 
 1132      6E5F5772 
 1132      69746550 
 1132      6572696F 
 1133              	.LASF4:
 1134 02bc 6C6F6E67 		.ascii	"long int\000"
 1134      20696E74 
 1134      00
 1135              	.LASF14:
 1136 02c5 6C6F6E67 		.ascii	"long double\000"
 1136      20646F75 
 1136      626C6500 
 1137              	.LASF0:
 1138 02d1 7369676E 		.ascii	"signed char\000"
 1138      65642063 
 1138      68617200 
 1139              	.LASF23:
 1140 02dd 636F6D70 		.ascii	"compare\000"
 1140      61726500 
 1141              	.LASF35:
 1142 02e5 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_Green.c\000"
 1142      72617465 
 1142      645F536F 
 1142      75726365 
 1142      5C50536F 
ARM GAS  C:\Users\SAISWA~1\AppData\Local\Temp\cccpH99R.s 			page 39


 1143              	.LASF17:
 1144 0308 50574D5F 		.ascii	"PWM_Green_Stop\000"
 1144      47726565 
 1144      6E5F5374 
 1144      6F7000
 1145              	.LASF25:
 1146 0317 50574D5F 		.ascii	"PWM_Green_Start\000"
 1146      47726565 
 1146      6E5F5374 
 1146      61727400 
 1147              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
